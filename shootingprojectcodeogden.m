%  _ represents superscript  
%ogden
%initial guesses gamma, rho, x - P etatheta

% 1) 0.7,8 ,0.6 3.6 -  0.6784  3.7837 0.3035
% 1) 0.7,7.8 ,0.6 3.4 - 0.6716 3.7015 0.2845
% 1) 0.7,7.6 ,0.6 3.4 - 0.6656 3.6195  0.2662
% 1) 0.7,7.4 ,0.6 3.4 - 0.6605 3.5374 0.2490
% 1) 0.7,7.2 ,0.6 3.2 - 0.6563 3.4554 0.2330
% 1) 0.7,7  , 0.6 3 - 0.6532 3.3734 0.2184
% 1) 0.7,6.8, 0.6 3 - 0.6511 3.2914 0.2053
% 1) 0.7,6.6, 0.6 3 - 0.6501 3.2094 0.1937
% 1) 0.7,6.4, 0.6 3 - 0.6502 3.1273 0.1836
% 1) 0.7,6.2, 0.6 3 - 0.6515 3.0451 0.1747
% 1) 0.7,6  , 1 1   - 0.654  2.9627
% 2) 0.7,5.5, 1 1   - 0.6661 2.7565
% 3) 0.7,5  , 1 1   - 0.6882 2.5506
% 4) 0.7,4.5, 1 1   - 0.7232 2.3461
% 5) 0.7,4  , 1 2   - 0.7726 2.1434
% 6) 0.7,3.7, 1 2   - 0.8086 2.0227
% 7) 0.7,3.6, 1 2   - 0.8214 1.9825
% 8) 0.7,3.5, 1 1.8 - 0.8345 1.9424
% 9) 0.7,3.4, 1 1.8 - 0.9058 1.7367
% 1  0.7,3.1, 1 1.7 - 0.89   1.7799
% 11 0.7,3  , 1 1.6 - 0.9057 1.7368
% 
% 12) 0.7,2.9, 1 1.6 - 0.926 1.688
% 13) 0.7,2.8, 1 1.6 - 0.9778 1.6095
% 14) 0.7,2.5, 1.2 1.4 - 1.2285 1.3344
% 15) 0.7,2.4, 1.2 1.4 - 1.2265 1.4241
% 16) 0.7,2.3, 1.2 1.4 - 1.2104 1.4228

% 
% 
% 2) 0.2,6, 2 1 - 2.5762 1.2988
% 2) 0.2,5.6, 2 1 - 2.4739 1.2268
% 2) 0.2,4.8, 2 1 - 2.3307 1.0803
% 2) 0.2,4.4, 2 1 - 2.3034 1.0034
% 2) 0.2,4.3, 2 1 - 2.3038 0.9833
% 2) 0.2,3.5, 2 1 - 2.8386 0.8613
% 2) 0.2,3, 3 1 - 3.5694 0.8493
% 2) 0.2,2.75, 3 1 - 3.5098 1.1367
% 2) 0.2,2.35, 3 1 - 2.4883 0.8848
% 2) 0.2,2, 3 1 - 2.5762 1.2988
% 
% 2) 0.4,3, 1.4 1.2 - 1.5358    1.1592
% 2) 0.4,3.2, 1.3 1.3 - 1.4503    1.2439
% 2) 0.4,3.4, 1.3 1.3 - 1.3793    1.3192
% 2) 0.4,3.6, 1.2 1.5 - 1.3185    1.3889
% 2) 0.4,3.8, 1.2 1.5 - 1.2684    1.4555
% 2) 0.4,4, 1.2 1.5 - 1.2288 1.5203
% 2) 0.4,4.2, 1.2 1.5  -1.1984 1.5838
% 2) 0.4,4.4, 1.2 1.6 - 1.1758  1.6466
% 2) 0.4,4.6, 1.2 1.6 - 1.1597   1.7085
% 2) 0.4,4.8, 1.2 1.7 - 1.1492    1.7700
% 2) 0.4,5, 1.1 1.8 - 1.1435   1.8310
% 2) 0.4,5.2, 1.1 1.8 - 1.1418    1.8915
% 2) 0.4,5.4, 1.1 1.9 - 1.1437    1.9517
% 2) 0.4,5.6, 1.1 1.95 - 1.1489    2.0118
% 2) 0.4,6, 1.1 2 - 1.1674   2.1312
% 2) 0.4,6.4, 1.1 2 - 1.1952   2.2501
% 2) 0.4,6.8, 1.2 2.2 - 1.2309  2.3688
% 2) 0.4,7, 1.2 2.2 - 1.2512  2.4281



function shootingprojectcodeogden
x = [0.6 3.6]; %initial guess at I
LB = [0 0];
UB=[];
options = optimset('TolFun', 1e-14, 'TolX', 1e-6);
options = optimset('Display','iter');
xx = fminsearchbnd(@optmfcn,x)


function F = optmfcn(x)
% options = odeset('RelTol',1e-12,'AbsTol',[1e-12 1e-12 1e-12 1e-12]);
% options = odeset('RelTol',1e-9,'AbsTol',[1e-6 1e-6 1e-6 1e-6]);
P = x(1);
rho = 8;
[theta,U,P] = ode45(@equation,[0 pi],[rho, 0, 0, x(2)]);
s = length(theta);

F = sqrt((U(s,2))^2 + U(s,3)^2); 
figure(8)
plot(U(:,1),U(:,3))
ans = U(end,1)

%xlabel('\rho')
%ylabel('\eta')
%title('Shooting Method using Fzero')


function dydx = equation(theta,U)
        alpha1 = 1.3;
        %P = 0.6894;
        alpha2 = 5.0;
        alpha3 = -2.0;
        gamma = 0.7;
        R = (1 + (gamma* (cos(theta))));
        mu1_star = 1.491;
        mu2_star = 0.0029;
        mu3_star = -0.0236;
        
        lambda1 = 1/gamma * sqrt(U(2)^2 + U(4)^2);
        lambda2 = U(1)/R;
        wlambda1 = 1/sqrt(lambda2);
        wlambda2 = 1/sqrt(lambda1);
                    
        S_1 = (alpha1 - 1)* (U(2).^2 + U(4).^2)^(alpha1)* U(1).^(alpha1)* R.^(alpha1) ...
            + (alpha1 +1)* gamma^(2* alpha1)* R.^(2* alpha1);
        S_2 = (U(2).^2 + U(4).^2)^(alpha1)* U(1).^(alpha1)* R.^(alpha1) ...
            - gamma^(2* alpha1)* R.^(2* alpha1);
        S_3 = (alpha2 - 1)* (U(2).^2 + U(4).^2)^(alpha2)* U(1).^(alpha2)* R.^(alpha2) ...
            + (alpha2 +1)* gamma^(2* alpha2)* R.^(2* alpha2);
        S_4 = (U(2).^2 + U(4).^2)^(alpha2)* U(1).^(alpha2)* R.^(alpha2) ...
            - gamma^(2* alpha2)* R.^(2* alpha2);
        S_5 = (alpha3 - 1)* (U(2).^2 + U(4).^2)^(alpha3)* U(1).^(alpha3)* R.^(alpha3) ...
            + (alpha3 +1)* gamma^(2* alpha3)* R.^(2* alpha3);
        S_6 = (U(2).^2 + U(4).^2)^(alpha3)* U(1).^(alpha3)* R.^(alpha3) ...
            - gamma^(2* alpha3)* R.^(2* alpha3);
        V_1 = alpha1* (U(2)* R + U(1)* gamma* sin(theta))* gamma^(2* alpha1) ...
            * R.^(2* alpha1 + 1);
        V_2 = (U(2).^2 + U(4).^2)^(alpha1)* U(1).^(alpha1)* R.^(alpha1) ...
            - gamma^(2* alpha1)* R.^(2* alpha1);
        V_3 = alpha2* (U(2)* R + U(1)* gamma* sin(theta))* gamma^(2* alpha2) ...
            * R.^(2* alpha2 + 1);
        V_4 = (U(2).^2 + U(4).^2)^(alpha2)* U(1).^(alpha2)* R.^(alpha2) ...
            - gamma^(2* alpha2)* R.^(2* alpha2);
        V_5 = alpha3* (U(2)* R + U(1)* gamma* sin(theta))* gamma^(2* alpha3) ...
            * R.^(2* alpha3 + 1);
        V_6 = (U(2).^2 + U(4).^2)^(alpha3)* U(1).^(alpha3)* R.^(alpha3) ...
            - gamma^(2* alpha3)* R.^(2* alpha3);
        V_7 = (U(2).^2 + U(4).^2)^(alpha1* 0.5)* U(1).^(2* alpha1)* gamma^(alpha1) ...
            - gamma^(2* alpha1)* R.^(2* alpha1);
        V_8 = (U(2).^2 + U(4).^2)^(alpha2* 0.5)* U(1).^(2* alpha2)* gamma^(alpha2) ...
            - gamma^(2* alpha2)* R.^(2* alpha2);
        V_9 = (U(2).^2 + U(4).^2)^(alpha3* 0.5)* U(1).^(2* alpha3)* gamma^(alpha3) ...
            - gamma^(2* alpha3)* R.^(2* alpha3);
%         if (lambda1 >= 1) && (lambda2 <= wlambda1) %wt lambda1
%             S22 = (mu1_star* R* (((U(2)^2* ((((alpha1 - 1)* (lambda1^(3*alpha1/ 2))) + ...
%                 ((0.5 * alpha1) + 1)))) + (U(4)^2* ((lambda1^(3* alpha1/2)) - 1))))* ...
%                 lambda1^((alpha2 + alpha3)/(2 + 8))) + (mu2_star* R* (((U(2)^2* ...
%                 ((((alpha2 - 1)* (lambda1^(3*alpha2/ 2))) + ((0.5 * alpha2) + 1))))...
%                 + (U(4)^2* ((lambda1^(3* alpha2/2)) - 1))))* lambda1^((alpha1 + alpha3)/(2 + 8))) + ...
%                 (mu3_star* R* (((U(2)^2* ((((alpha3 - 1)* (lambda1^(3*alpha3/ 2))) + ...
%                 ((0.5 * alpha3) + 1)))) + (U(4)^2* ((lambda1^(3* alpha3/2)) - 1))))* ...
%                 lambda1^((alpha1 + alpha2)/(2 + 8))); 
%             S24 = (mu1_star* R* (((U(2)* U(4)* ((((alpha1 - 2)* (lambda1^(3*alpha1/ 2))) + ...
%                 ((0.5 * alpha1) + 2))))))* lambda1^((alpha2 + alpha3)/(2 + 8))) + ...
%                 (mu2_star* R* (((U(2)* U(4)* ((((alpha2 - 2)* (lambda1^(3*alpha2/ 2))) + ...
%                 ((0.5 * alpha2) + 2))))))* lambda1^((alpha1 + alpha3)/(2 + 8))) + ...
%                 (mu3_star* R* (((U(2)* U(4)* ((((alpha3 - 2)* (lambda1^(3*alpha3/ 2))) + ...
%                 ((0.5 * alpha3) + 2))))))* lambda1^((alpha1 + alpha2)/(2 + 8)));
%             S42 = S24;
%             S44 = (mu1_star* R* (((U(4)^2* ((((alpha1 - 1)* (lambda1^(3*alpha1/ 2))) + ...
%                 ((0.5 * alpha1) + 1)))) + (U(2)^2* ((lambda1^(3* alpha1/2)) - 1))))* ...
%                 lambda1^((alpha2 + alpha3)/(2 + 8))) + (mu2_star* R* (((U(4)^2* ...
%                 ((((alpha2 - 1)* (lambda1^(3*alpha2/ 2))) + ((0.5 * alpha2) + 1))))...
%                 + (U(2)^2* ((lambda1^(3* alpha2/2)) - 1))))* lambda1^((alpha1 + alpha3)/(2 + 8))) + ...
%                 (mu3_star* R* (((U(4)^2* ((((alpha3 - 1)* (lambda1^(3*alpha3/ 2))) + ...
%                 ((0.5 * alpha3) + 1)))) + (U(2)^2* ((lambda1^(3* alpha3/2)) - 1))))* ...
%                 lambda1^((alpha1 + alpha2)/(2 + 8))); 
%             V1 = (((mu1_star* ((lambda1^(3* alpha1/ 2)) - 1)* (lambda1^((alpha2 + alpha3)/(2+10)))) + ...
%                 (mu2_star* ((lambda1^(3* alpha2/ 2)) - 1)* (lambda1^((alpha1 + alpha3)/(2+10)))) + ...
%                 (mu3_star* ((lambda1^(3* alpha3/ 2)) - 1)* (lambda1^((alpha1 + alpha2)/(2+10)))))* ...
%                 (gamma^3)* (U(2))* sin(theta)) - (0.5* mu1_star* P* U(1)* U(4)* ...
%                 (lambda1^((alpha1 + alpha2 + alpha3)/(2 + 12)))* (gamma^3));
%             V2 = (((mu1_star* ((lambda1^(3* alpha1/ 2)) - 1)* (lambda1^((alpha2 + alpha3)/(2+10)))) + ...
%                 (mu2_star* ((lambda1^(3* alpha2/ 2)) - 1)* (lambda1^((alpha1 + alpha3)/(2+10)))) + ...
%                 (mu3_star* ((lambda1^(3* alpha3/ 2)) - 1)* (lambda1^((alpha1 + alpha2)/(2+10)))))* ...
%                 (gamma^3)* (U(4))* sin(theta)) + (0.5* mu1_star* P* U(1)* U(2)* ...
%                 (lambda1^((alpha1 + alpha2 + alpha3)/(2 + 12)))* (gamma^3));
%             
%          elseif (lambda1 <= wlambda2) && (lambda2 >= 1) %wt lambda2
%                          S22 = (mu1_star* R* (((U(2)^2* ((((alpha1 - 1)* (lambda1^(3*alpha1/ 2))) + ...
%                 ((0.5 * alpha1) + 1)))) + (U(4)^2* ((lambda1^(3* alpha1/2)) - 1))))* ...
%                 lambda1^((alpha2 + alpha3)/(2 + 8))) + (mu2_star* R* (((U(2)^2* ...
%                 ((((alpha2 - 1)* (lambda1^(3*alpha2/ 2))) + ((0.5 * alpha2) + 1))))...
%                 + (U(4)^2* ((lambda1^(3* alpha2/2)) - 1))))* lambda1^((alpha1 + alpha3)/(2 + 8))) + ...
%                 (mu3_star* R* (((U(2)^2* ((((alpha3 - 1)* (lambda1^(3*alpha3/ 2))) + ...
%                 ((0.5 * alpha3) + 1)))) + (U(4)^2* ((lambda1^(3* alpha3/2)) - 1))))* ...
%                 lambda1^((alpha1 + alpha2)/(2 + 8))); 
%             S24 = (mu1_star* R* (((U(2)* U(4)* ((((alpha1 - 2)* (lambda1^(3*alpha1/ 2))) + ...
%                 ((0.5 * alpha1) + 2))))))* lambda1^((alpha2 + alpha3)/(2 + 8))) + ...
%                 (mu2_star* R* (((U(2)* U(4)* ((((alpha2 - 2)* (lambda1^(3*alpha2/ 2))) + ...
%                 ((0.5 * alpha2) + 2))))))* lambda1^((alpha1 + alpha3)/(2 + 8))) + ...
%                 (mu3_star* R* (((U(2)* U(4)* ((((alpha3 - 2)* (lambda1^(3*alpha3/ 2))) + ...
%                 ((0.5 * alpha3) + 2))))))* lambda1^((alpha1 + alpha2)/(2 + 8)));
%             S42 = S24;
%             S44 = (mu1_star* R* (((U(4)^2* ((((alpha1 - 1)* (lambda1^(3*alpha1/ 2))) + ...
%                 ((0.5 * alpha1) + 1)))) + (U(2)^2* ((lambda1^(3* alpha1/2)) - 1))))* ...
%                 lambda1^((alpha2 + alpha3)/(2 + 8))) + (mu2_star* R* (((U(4)^2* ...
%                 ((((alpha2 - 1)* (lambda1^(3*alpha2/ 2))) + ((0.5 * alpha2) + 1))))...
%                 + (U(2)^2* ((lambda1^(3* alpha2/2)) - 1))))* lambda1^((alpha1 + alpha3)/(2 + 8))) + ...
%                 (mu3_star* R* (((U(4)^2* ((((alpha3 - 1)* (lambda1^(3*alpha3/ 2))) + ...
%                 ((0.5 * alpha3) + 1)))) + (U(2)^2* ((lambda1^(3* alpha3/2)) - 1))))* ...
%                 lambda1^((alpha1 + alpha2)/(2 + 8))); 
%             V1 = (((mu1_star* ((lambda1^(3* alpha1/ 2)) - 1)* (lambda1^((alpha2 + alpha3)/(2+10)))) + ...
%                 (mu2_star* ((lambda1^(3* alpha2/ 2)) - 1)* (lambda1^((alpha1 + alpha3)/(2+10)))) + ...
%                 (mu3_star* ((lambda1^(3* alpha3/ 2)) - 1)* (lambda1^((alpha1 + alpha2)/(2+10)))))* ...
%                 (gamma^3)* (U(2))* sin(theta)) - (0.5* mu1_star* P* U(1)* U(4)* ...
%                 (lambda1^((alpha1 + alpha2 + alpha3)/(2 + 12)))* (gamma^3));
%             V2 = (((mu1_star* ((lambda1^(3* alpha1/ 2)) - 1)* (lambda1^((alpha2 + alpha3)/(2+10)))) + ...
%                 (mu2_star* ((lambda1^(3* alpha2/ 2)) - 1)* (lambda1^((alpha1 + alpha3)/(2+10)))) + ...
%                 (mu3_star* ((lambda1^(3* alpha3/ 2)) - 1)* (lambda1^((alpha1 + alpha2)/(2+10)))))* ...
%                 (gamma^3)* (U(4))* sin(theta)) + (0.5* mu1_star* P* U(1)* U(2)* ...
%                 (lambda1^((alpha1 + alpha2 + alpha3)/(2 + 12)))* (gamma^3));
%          elseif (lambda1 >= wlambda2) && (lambda2 >= wlambda1) %w lambda1,2
%                          S22 = (mu1_star* R* (((U(2)^2* ((((alpha1 - 1)* (lambda1^(3*alpha1/ 2))) + ...
%                 ((0.5 * alpha1) + 1)))) + (U(4)^2* ((lambda1^(3* alpha1/2)) - 1))))* ...
%                 lambda1^((alpha2 + alpha3)/(2 + 8))) + (mu2_star* R* (((U(2)^2* ...
%                 ((((alpha2 - 1)* (lambda1^(3*alpha2/ 2))) + ((0.5 * alpha2) + 1))))...
%                 + (U(4)^2* ((lambda1^(3* alpha2/2)) - 1))))* lambda1^((alpha1 + alpha3)/(2 + 8))) + ...
%                 (mu3_star* R* (((U(2)^2* ((((alpha3 - 1)* (lambda1^(3*alpha3/ 2))) + ...
%                 ((0.5 * alpha3) + 1)))) + (U(4)^2* ((lambda1^(3* alpha3/2)) - 1))))* ...
%                 lambda1^((alpha1 + alpha2)/(2 + 8))); 
%             S24 = (mu1_star* R* (((U(2)* U(4)* ((((alpha1 - 2)* (lambda1^(3*alpha1/ 2))) + ...
%                 ((0.5 * alpha1) + 2))))))* lambda1^((alpha2 + alpha3)/(2 + 8))) + ...
%                 (mu2_star* R* (((U(2)* U(4)* ((((alpha2 - 2)* (lambda1^(3*alpha2/ 2))) + ...
%                 ((0.5 * alpha2) + 2))))))* lambda1^((alpha1 + alpha3)/(2 + 8))) + ...
%                 (mu3_star* R* (((U(2)* U(4)* ((((alpha3 - 2)* (lambda1^(3*alpha3/ 2))) + ...
%                 ((0.5 * alpha3) + 2))))))* lambda1^((alpha1 + alpha2)/(2 + 8)));
%             S42 = S24;
%             S44 = (mu1_star* R* (((U(4)^2* ((((alpha1 - 1)* (lambda1^(3*alpha1/ 2))) + ...
%                 ((0.5 * alpha1) + 1)))) + (U(2)^2* ((lambda1^(3* alpha1/2)) - 1))))* ...
%                 lambda1^((alpha2 + alpha3)/(2 + 8))) + (mu2_star* R* (((U(4)^2* ...
%                 ((((alpha2 - 1)* (lambda1^(3*alpha2/ 2))) + ((0.5 * alpha2) + 1))))...
%                 + (U(2)^2* ((lambda1^(3* alpha2/2)) - 1))))* lambda1^((alpha1 + alpha3)/(2 + 8))) + ...
%                 (mu3_star* R* (((U(4)^2* ((((alpha3 - 1)* (lambda1^(3*alpha3/ 2))) + ...
%                 ((0.5 * alpha3) + 1)))) + (U(2)^2* ((lambda1^(3* alpha3/2)) - 1))))* ...
%                 lambda1^((alpha1 + alpha2)/(2 + 8))); 
%             V1 = (((mu1_star* ((lambda1^(3* alpha1/ 2)) - 1)* (lambda1^((alpha2 + alpha3)/(2+10)))) + ...
%                 (mu2_star* ((lambda1^(3* alpha2/ 2)) - 1)* (lambda1^((alpha1 + alpha3)/(2+10)))) + ...
%                 (mu3_star* ((lambda1^(3* alpha3/ 2)) - 1)* (lambda1^((alpha1 + alpha2)/(2+10)))))* ...
%                 (gamma^3)* (U(2))* sin(theta)) - (0.5* mu1_star* P* U(1)* U(4)* ...
%                 (lambda1^((alpha1 + alpha2 + alpha3)/(2 + 12)))* (gamma^3));
%             V2 = (((mu1_star* ((lambda1^(3* alpha1/ 2)) - 1)* (lambda1^((alpha2 + alpha3)/(2+10)))) + ...
%                 (mu2_star* ((lambda1^(3* alpha2/ 2)) - 1)* (lambda1^((alpha1 + alpha3)/(2+10)))) + ...
%                 (mu3_star* ((lambda1^(3* alpha3/ 2)) - 1)* (lambda1^((alpha1 + alpha2)/(2+10)))))* ...
%                 (gamma^3)* (U(4))* sin(theta)) + (0.5* mu1_star* P* U(1)* U(2)* ...
%                 (lambda1^((alpha1 + alpha2 + alpha3)/(2 + 12)))* (gamma^3));
%          elseif (lambda1 <= 1) && (lambda2 <= 1)                 % 0 
%                          S22 = (mu1_star* R* (((U(2)^2* ((((alpha1 - 1)* (lambda1^(3*alpha1/ 2))) + ...
%                 ((0.5 * alpha1) + 1)))) + (U(4)^2* ((lambda1^(3* alpha1/2)) - 1))))* ...
%                 lambda1^((alpha2 + alpha3)/(2 + 8))) + (mu2_star* R* (((U(2)^2* ...
%                 ((((alpha2 - 1)* (lambda1^(3*alpha2/ 2))) + ((0.5 * alpha2) + 1))))...
%                 + (U(4)^2* ((lambda1^(3* alpha2/2)) - 1))))* lambda1^((alpha1 + alpha3)/(2 + 8))) + ...
%                 (mu3_star* R* (((U(2)^2* ((((alpha3 - 1)* (lambda1^(3*alpha3/ 2))) + ...
%                 ((0.5 * alpha3) + 1)))) + (U(4)^2* ((lambda1^(3* alpha3/2)) - 1))))* ...
%                 lambda1^((alpha1 + alpha2)/(2 + 8))); 
%             S24 = (mu1_star* R* (((U(2)* U(4)* ((((alpha1 - 2)* (lambda1^(3*alpha1/ 2))) + ...
%                 ((0.5 * alpha1) + 2))))))* lambda1^((alpha2 + alpha3)/(2 + 8))) + ...
%                 (mu2_star* R* (((U(2)* U(4)* ((((alpha2 - 2)* (lambda1^(3*alpha2/ 2))) + ...
%                 ((0.5 * alpha2) + 2))))))* lambda1^((alpha1 + alpha3)/(2 + 8))) + ...
%                 (mu3_star* R* (((U(2)* U(4)* ((((alpha3 - 2)* (lambda1^(3*alpha3/ 2))) + ...
%                 ((0.5 * alpha3) + 2))))))* lambda1^((alpha1 + alpha2)/(2 + 8)));
%             S42 = S24;
%             S44 = (mu1_star* R* (((U(4)^2* ((((alpha1 - 1)* (lambda1^(3*alpha1/ 2))) + ...
%                 ((0.5 * alpha1) + 1)))) + (U(2)^2* ((lambda1^(3* alpha1/2)) - 1))))* ...
%                 lambda1^((alpha2 + alpha3)/(2 + 8))) + (mu2_star* R* (((U(4)^2* ...
%                 ((((alpha2 - 1)* (lambda1^(3*alpha2/ 2))) + ((0.5 * alpha2) + 1))))...
%                 + (U(2)^2* ((lambda1^(3* alpha2/2)) - 1))))* lambda1^((alpha1 + alpha3)/(2 + 8))) + ...
%                 (mu3_star* R* (((U(4)^2* ((((alpha3 - 1)* (lambda1^(3*alpha3/ 2))) + ...
%                 ((0.5 * alpha3) + 1)))) + (U(2)^2* ((lambda1^(3* alpha3/2)) - 1))))* ...
%                 lambda1^((alpha1 + alpha2)/(2 + 8))); 
%             V1 = (((mu1_star* ((lambda1^(3* alpha1/ 2)) - 1)* (lambda1^((alpha2 + alpha3)/(2+10)))) + ...
%                 (mu2_star* ((lambda1^(3* alpha2/ 2)) - 1)* (lambda1^((alpha1 + alpha3)/(2+10)))) + ...
%                 (mu3_star* ((lambda1^(3* alpha3/ 2)) - 1)* (lambda1^((alpha1 + alpha2)/(2+10)))))* ...
%                 (gamma^3)* (U(2))* sin(theta)) - (0.5* mu1_star* P* U(1)* U(4)* ...
%                 (lambda1^((alpha1 + alpha2 + alpha3)/(2 + 12)))* (gamma^3));
%             V2 = (((mu1_star* ((lambda1^(3* alpha1/ 2)) - 1)* (lambda1^((alpha2 + alpha3)/(2+10)))) + ...
%                 (mu2_star* ((lambda1^(3* alpha2/ 2)) - 1)* (lambda1^((alpha1 + alpha3)/(2+10)))) + ...
%                 (mu3_star* ((lambda1^(3* alpha3/ 2)) - 1)* (lambda1^((alpha1 + alpha2)/(2+10)))))* ...
%                 (gamma^3)* (U(4))* sin(theta)) + (0.5* mu1_star* P* U(1)* U(2)* ...
%                 (lambda1^((alpha1 + alpha2 + alpha3)/(2 + 12)))* (gamma^3));
%         else 
%             
            S22 = ((mu1_star* (((U(1)* R.^2) * (U(2).^2 + U(4).^2)* ((((S_1)* U(2).^2)) ...
                + ((S_2)* U(4).^2))))) * (lambda1.^(alpha2 + alpha3 + 6)) * ...
                (lambda2.^(alpha2 + alpha3 + 2)) * (gamma^((2* alpha2) + (2* alpha3) + 4)) * ...
                (R.^((2* alpha2) + (2* alpha3)+ 4))) + (mu2_star* ((U(1)* R.^2) * (U(2).^2 ...
                + U(4).^2)* ((S_3)* (U(2).^2) + ((S_4)* U(4).^2)))* (lambda1.^(alpha1 + alpha3 + 6)) * ...
                (lambda2.^(alpha1 + alpha3 + 2)) * (gamma^((2* alpha1) + (2* alpha3) + 4)) * (R.^((2* ...
                alpha1) + (2* alpha3) + 4))) + (mu3_star* (U(1)* R.^2 * (U(2).^2 + U(4).^2)* (((S_5)* ...
                U(2).^2) + ((S_6)* U(4).^2)))* (lambda1.^(alpha1 + alpha2 + 6)) * (lambda2^(alpha1 ...
                + alpha2 + 2)) * (gamma^((2* alpha1) + (2* alpha2) + 4)) * (R.^((2* alpha1) + (2* alpha2) + 4)));
            S24 = (mu1_star* (U(1)* R.^2 * (U(2).^2 + U(4).^2)* (((S_1)* U(2)* U(4)) - ((S_2)* U(2)* U(4))))* ...
                (lambda1.^(alpha2 + alpha3 + 6)) * (lambda2.^(alpha2 + alpha3 + 2)) * (gamma^((2* alpha2) ...
                + (2* alpha3) + 4)) * (R.^((2* alpha2) + (2* alpha3) + 4))) + (mu2_star* (U(1)* R.^2 * (U(2).^2 ...
                + U(4).^2)* (((S_3)* U(2)* U(4)) - ((S_4)* U(2)* U(4))))* (lambda1.^(alpha1 + alpha3 + 6)) * ...
                (lambda2.^(alpha1 + alpha3 + 2)) * (gamma^((2* alpha1) + (2* alpha3) + 4)) * (R.^((2* alpha1) ...
                + (2* alpha3) + 4))) + (mu3_star* (U(1)* R.^2 * (U(2).^2 + U(4).^2)* (((S_5)* U(2)* U(4)) - ((S_6)* ...
                U(2)* U(4))))* (lambda1.^(alpha1 + alpha2 + 6)) * (lambda2.^(alpha1 + alpha2 + 2)) * ...
                (gamma^((2* alpha1) + (2* alpha2) + 4)) * (R.^((2* alpha1) + (2* alpha2) + 4)));
            S42 = (mu1_star* (((U(1)* R.^2) * (U(2).^2 + U(4).^2)* (((S_1)* U(2)* U(4)) - ((S_2)* U(2)* U(4)))))* ...
                (lambda1.^(alpha2 + alpha3 + 6)) * (lambda2^(alpha2 + alpha3 + 2)) * (gamma^((2* alpha2) ...
                + (2* alpha3) + 4)) * (R.^((2* alpha2) + (2* alpha3) + 4))) + (mu2_star* ((U(1)* R.^2) * (U(2).^2 ...
                + U(4).^2)* (((S_3)* U(2)* U(4)) - ((S_4)* U(2)* U(4))))* (lambda1.^(alpha1 + alpha3 + 6)) * ...
                (lambda2.^(alpha1 + alpha3 + 2)) * (gamma^((2* alpha1) + (2* alpha3) + 4)) * (R.^((2* alpha1) ...
                + (2* alpha3) + 4))) + (mu3_star* ((U(1)* R.^2) * ((U(2).^2 + U(4).^2))* (((S_5)* U(2)* U(4)) - ((S_6)* ...
                U(2)* U(4))))* (lambda1.^(alpha1 + alpha2 + 6)) * (lambda2.^(alpha1 + alpha2 + 2)) * ...
                (gamma^((2* alpha1) + (2* alpha2) + 4)) * (R.^((2* alpha1) + (2* alpha2) + 4)));
            S44 = (mu1_star* ((U(1)* R.^2) * (U(2).^2 + U(4).^2)* (((S_1)* U(4).^2) + ((S_2)* U(2).^2)))* ...
                (lambda1.^(alpha2 + alpha3 + 6)) * (lambda2.^(alpha2 + alpha3 + 2)) * (gamma^(2* alpha2 ...
                + 2* alpha3 + 4)) * (R.^((2* alpha2) + (2* alpha3) + 4))) + (mu2_star* ((U(1)* R.^2) * (U(2).^2 ...
                + U(4).^2)* (((S_3)* U(4).^2) + ((S_4)* U(2).^2)))* (lambda1.^(alpha1 + alpha3 + 6)) * ...
                (lambda2.^(alpha1 + alpha3 + 2)) * (gamma^((2* alpha1) + (2* alpha3) + 4)) * (R.^((2* ...
                alpha1) + (2* alpha3) + 4))) + (mu3_star* ((U(1)* R.^2) * (U(2).^2 + U(4).^2)* (((S_5)* ...
                U(4).^2) + ((S_6)* U(2).^2)))* (lambda1.^(alpha1 + alpha2 + 6)) * (lambda2.^(alpha1 ...
                + alpha2 + 2)) * (gamma^((2* alpha1) + (2* alpha2) + 4)) * (R.^((2* alpha1) + (2* alpha2) + 4)));

            V1 = (mu1_star* ((((V_2)* U(1)* U(2))* ((U(2).^2 + U(4).^2)^2)* (gamma* R* sin(theta)))+ ((V_7)* ...
                ((U(2).^2 + U(4).^2).^3) * (R^2)))* (lambda1.^(alpha2 + alpha3 + 6)) * (lambda2.^(alpha2 + ...
                alpha3 + 2)) * (gamma^((2* alpha2) + (2* alpha3) + 4)) * (R.^((2* alpha2) + (2* alpha3) + 4)))...
                - (mu1_star* ((V_1)* U(2)* ((U(2).^2 + U(4).^2)^2))* (lambda1.^(alpha2 + alpha3 + 6)) ...
                * (lambda2.^(alpha2 + alpha3 + 2)) * (gamma^((2* alpha2) + (2* alpha3) + 4)) * (R.^((2* alpha2) ...
                + (2* alpha3) + 4))) + (mu2_star* ((((V_4)* U(1)* U(2))* ((U(2).^2 + U(4).^2)^2) * gamma * R ...
                * sin(theta)) + ((V_8)* ((U(2).^2 + U(4).^2)^3) * (R.^2)))* (lambda1.^(alpha1 + alpha3 + 6))* ...
                (lambda2.^(alpha1 + alpha3 + 2))* (gamma^((2* alpha1) + (2* alpha3) + 4))* (R.^((2* alpha1) ...
                + (2* alpha3) + 4))) - (mu2_star* (((V_3)* U(2))* ((U(2).^2 + U(4).^2).^2))* (lambda1.^(alpha1 ...
                + alpha3 + 6))* (lambda2.^(alpha1 + alpha3 + 2))* (gamma^((2* alpha1) + (2* alpha3) + 4))* ...
                (R.^((2* alpha1) + (2* alpha3) + 4))) + mu3_star* (V_6* U(1)* U(2)* ((U(2).^2 + U(4).^2)^2)* ...
                gamma* R* sin(theta)+ V_9* (U(2).^2 + U(4).^2)^3 * R.^2)* lambda1.^(alpha1 + alpha2 + 6) ...
                * lambda2.^(alpha1 + alpha2 + 2) * gamma^(2* alpha1 + 2* alpha2 + 4) * R.^(2* alpha1 ...
                + 2* alpha2 + 4) - mu3_star* (V_5* U(2)* (U(2).^2 + U(4).^2).^2) * lambda1.^(alpha1 ...
                + alpha2 + 6)* lambda2.^(alpha1 + alpha2 + 2)* gamma^(2* alpha1 + 2* alpha2 + 4)* ...
                R.^(2* alpha1 + 2* alpha2 + 4) - 0.5* mu1_star* P* U(1)* U(4)* (U(2).^2 + U(4).^2)^1.5 ...
                * lambda1.^(alpha1 + alpha2 + alpha3 + 9)* lambda2.^(alpha1 + alpha2 + alpha3 + 3) ...
                * gamma^(2* alpha1 + 2* alpha2 + 2* alpha3 + 6)* R.^(2* alpha1 + 2* alpha2 + 2* alpha3 ...
                + 6);

            V2 = mu1_star* (V_2* U(1)* U(4)* ((U(2).^2 + U(4).^2).^2)* gamma* R* sin(theta))+ ...
                lambda1.^(alpha2 + alpha3 + 6) * lambda2.^(alpha2 + alpha3 + 2) * gamma^(2* alpha2 ...
                + 2* alpha3 + 4) * R.^(2* alpha2 + 2* alpha3 + 4) - mu1_star* (V_1* U(4)* ((U(2).^2 ...
                + U(4).^2).^2))* lambda1.^(alpha2 + alpha3 + 6) * lambda2.^(alpha2 + alpha3 + 2) * ...
                gamma^(2* alpha2 + 2* alpha3 + 4) * R.^(2* alpha2 + 2* alpha3 + 4) + mu2_star* ...
                (V_4* U(1)* U(4)* (U(2).^2 + U(4).^2).^2 * gamma * R * sin(theta))* lambda1.^(alpha1 ...
                + alpha3 + 6)* lambda2.^(alpha1 + alpha3 + 2)* gamma^(2* alpha1 + 2* alpha3 + 4)* ...
                R.^(2* alpha1 + 2* alpha3 + 4) - mu2_star* (V_3* U(4)* (U(2).^2 + U(4).^2).^2)* ...
                lambda1.^(alpha1 + alpha3 + 6)* lambda2.^(alpha1 + alpha3 + 2)* gamma^(2* alpha1 ...
                + 2* alpha3 + 4)* R.^(2* alpha1 + 2* alpha3 + 4) + mu3_star* (V_6* U(1)* U(4)* ...
                ((U(2).^2 + U(4).^2).^2)* gamma* R* sin(theta))* lambda1.^(alpha1 + alpha2 + 6) ...
                * lambda2.^(alpha1 + alpha2 + 2) * gamma^(2* alpha1 + 2* alpha2 + 4) * R.^(2* alpha1 ...
                + 2* alpha2 + 4) - mu3_star* (V_5* U(4)* (U(2).^2 + U(4).^2).^2) * lambda1.^(alpha1 ...
                + alpha2 + 6)* lambda2.^(alpha1 + alpha2 + 2)* gamma^(2* alpha1 + 2* alpha2 + 4)* ...
                R.^(2* alpha1 + 2* alpha2 + 4) + 0.5* mu1_star* P* U(1)* U(2)* (U(2).^2 + U(4).^2)^1.5 ...
                * lambda1.^(alpha1 + alpha2 + alpha3 + 9)* lambda2.^(alpha1 + alpha2 + alpha3 + 3) ...
                * gamma^(2* alpha1 + 2* alpha2 + 2* alpha3 + 6)* R.^(2* alpha1 + 2* alpha2 + 2* alpha3 ...
                + 6);
%          end
        
            mass = [1 0 0 0; 
                   0 S22 0 S24; 
                   0 0 1 0;
                   0 S42 0 S44];
        dydx = mass\ [U(2); V1; U(4); V2];
end
end
end